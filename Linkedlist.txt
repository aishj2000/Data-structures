#include <iostream>

using namespace std;

class node
{
    public:
    int data;
    node* next;
    
    node(int val)
    {
        data = val;
        next = NULL;
        
    }
};

void InsertAtTail(node* &head, int val)
{
    node* n = new node(val);
    if(head==NULL)
    {
        head = n;
        return;
    }
    node* temp = head;
    while(temp->next!=NULL)
    {
        temp=temp->next;
    }temp->next=n;
}

void display(node* head)
{
    node* temp = head;
    while(temp!=NULL)
    {
        cout<<temp->data<<"->";
        temp=temp->next;
    }cout<<"NULL"<<endl;
}

node* reverse(node* &head)
{
    if(head==NULL || head->next==NULL)
    {
        return head;
    }
    node* newhead = reverse(head->next);
    head->next->next = head;
    head->next = NULL;
    return newhead;
}

node* reversek(node* &head, int k)
{
    node* prevptr = NULL;
    node* currptr = head;
    node* nextptr;
    int count = 0;
    
    while(currptr!=NULL && count<k)
    {
        nextptr = currptr->next;
        currptr->next = prevptr;
        
        prevptr = currptr;
        currptr = nextptr;
        count++;
    }
    if(nextptr!=NULL)
    {
        head->next = reversek(nextptr,k);
    }
    return prevptr;
    
}

void makecycle(node* &head, int pos)
{
    node* temp = head;
    node* startnode;
    int count = 1;
    
    while(temp!=NULL)
    {
        if(count==pos)
        {
            startnode = temp;
        }
        temp = temp->next;
        count++;
    }
    temp->next = startnode;
}


int main()
{
    node* head = NULL;
    InsertAtTail(head,1);
    InsertAtTail(head,2);
    InsertAtTail(head,3);
    InsertAtTail(head,4);
    InsertAtTail(head,5);
    InsertAtTail(head,6);
    display(head);
    //node* newhead = reverse(head);
    //display(newhead);
    
    //int k=2;
    //node* newhead = reversek(head,k);
    //display(newhead);
    
    makecycle(head,3);
    display(head);

    return 0;
}